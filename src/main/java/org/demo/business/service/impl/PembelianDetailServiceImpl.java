/*
 * Created on 25 Jul 2021 ( Time 02:07:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.PembelianDetail;
import org.demo.bean.jpa.PembelianDetailEntity;
import org.demo.business.service.PembelianDetailService;
import org.demo.business.service.mapping.PembelianDetailServiceMapper;
import org.demo.data.repository.jpa.PembelianDetailJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of PembelianDetailService
 */
@Component
@Transactional
public class PembelianDetailServiceImpl implements PembelianDetailService {

	@Resource
	private PembelianDetailJpaRepository pembelianDetailJpaRepository;

	@Resource
	private PembelianDetailServiceMapper pembelianDetailServiceMapper;
	
	@Override
	public PembelianDetail findById(Integer idPembelianDetail) {
		PembelianDetailEntity pembelianDetailEntity = pembelianDetailJpaRepository.findOne(idPembelianDetail);
		return pembelianDetailServiceMapper.mapPembelianDetailEntityToPembelianDetail(pembelianDetailEntity);
	}

	@Override
	public List<PembelianDetail> findAll() {
		Iterable<PembelianDetailEntity> entities = pembelianDetailJpaRepository.findAll();
		List<PembelianDetail> beans = new ArrayList<PembelianDetail>();
		for(PembelianDetailEntity pembelianDetailEntity : entities) {
			beans.add(pembelianDetailServiceMapper.mapPembelianDetailEntityToPembelianDetail(pembelianDetailEntity));
		}
		return beans;
	}

	@Override
	public PembelianDetail save(PembelianDetail pembelianDetail) {
		return update(pembelianDetail) ;
	}

	@Override
	public PembelianDetail create(PembelianDetail pembelianDetail) {
		PembelianDetailEntity pembelianDetailEntity = pembelianDetailJpaRepository.findOne(pembelianDetail.getIdPembelianDetail());
		if( pembelianDetailEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		pembelianDetailEntity = new PembelianDetailEntity();
		pembelianDetailServiceMapper.mapPembelianDetailToPembelianDetailEntity(pembelianDetail, pembelianDetailEntity);
		PembelianDetailEntity pembelianDetailEntitySaved = pembelianDetailJpaRepository.save(pembelianDetailEntity);
		return pembelianDetailServiceMapper.mapPembelianDetailEntityToPembelianDetail(pembelianDetailEntitySaved);
	}

	@Override
	public PembelianDetail update(PembelianDetail pembelianDetail) {
		PembelianDetailEntity pembelianDetailEntity = pembelianDetailJpaRepository.findOne(pembelianDetail.getIdPembelianDetail());
		pembelianDetailServiceMapper.mapPembelianDetailToPembelianDetailEntity(pembelianDetail, pembelianDetailEntity);
		PembelianDetailEntity pembelianDetailEntitySaved = pembelianDetailJpaRepository.save(pembelianDetailEntity);
		return pembelianDetailServiceMapper.mapPembelianDetailEntityToPembelianDetail(pembelianDetailEntitySaved);
	}

	@Override
	public void delete(Integer idPembelianDetail) {
		pembelianDetailJpaRepository.delete(idPembelianDetail);
	}

	public PembelianDetailJpaRepository getPembelianDetailJpaRepository() {
		return pembelianDetailJpaRepository;
	}

	public void setPembelianDetailJpaRepository(PembelianDetailJpaRepository pembelianDetailJpaRepository) {
		this.pembelianDetailJpaRepository = pembelianDetailJpaRepository;
	}

	public PembelianDetailServiceMapper getPembelianDetailServiceMapper() {
		return pembelianDetailServiceMapper;
	}

	public void setPembelianDetailServiceMapper(PembelianDetailServiceMapper pembelianDetailServiceMapper) {
		this.pembelianDetailServiceMapper = pembelianDetailServiceMapper;
	}

}
