/*
 * Created on 25 Jul 2021 ( Time 02:07:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.PembelianHeader;
import org.demo.bean.jpa.PembelianHeaderEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.PembelianHeaderService;
import org.demo.business.service.mapping.PembelianHeaderServiceMapper;
import org.demo.data.repository.jpa.PembelianHeaderJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of PembelianHeaderService
 */
@Component
@Transactional
public class PembelianHeaderServiceImpl implements PembelianHeaderService {

	@Resource
	private PembelianHeaderJpaRepository pembelianHeaderJpaRepository;

	@Resource
	private PembelianHeaderServiceMapper pembelianHeaderServiceMapper;
	
	@Override
	public PembelianHeader findById(Integer idPembelian) {
		PembelianHeaderEntity pembelianHeaderEntity = pembelianHeaderJpaRepository.findOne(idPembelian);
		return pembelianHeaderServiceMapper.mapPembelianHeaderEntityToPembelianHeader(pembelianHeaderEntity);
	}

	@Override
	public List<PembelianHeader> findAll() {
		Iterable<PembelianHeaderEntity> entities = pembelianHeaderJpaRepository.findAll();
		List<PembelianHeader> beans = new ArrayList<PembelianHeader>();
		for(PembelianHeaderEntity pembelianHeaderEntity : entities) {
			beans.add(pembelianHeaderServiceMapper.mapPembelianHeaderEntityToPembelianHeader(pembelianHeaderEntity));
		}
		return beans;
	}

	@Override
	public PembelianHeader save(PembelianHeader pembelianHeader) {
		return update(pembelianHeader) ;
	}

	@Override
	public PembelianHeader create(PembelianHeader pembelianHeader) {
		PembelianHeaderEntity pembelianHeaderEntity = pembelianHeaderJpaRepository.findOne(pembelianHeader.getIdPembelian());
		if( pembelianHeaderEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		pembelianHeaderEntity = new PembelianHeaderEntity();
		pembelianHeaderServiceMapper.mapPembelianHeaderToPembelianHeaderEntity(pembelianHeader, pembelianHeaderEntity);
		PembelianHeaderEntity pembelianHeaderEntitySaved = pembelianHeaderJpaRepository.save(pembelianHeaderEntity);
		return pembelianHeaderServiceMapper.mapPembelianHeaderEntityToPembelianHeader(pembelianHeaderEntitySaved);
	}

	@Override
	public PembelianHeader update(PembelianHeader pembelianHeader) {
		PembelianHeaderEntity pembelianHeaderEntity = pembelianHeaderJpaRepository.findOne(pembelianHeader.getIdPembelian());
		pembelianHeaderServiceMapper.mapPembelianHeaderToPembelianHeaderEntity(pembelianHeader, pembelianHeaderEntity);
		PembelianHeaderEntity pembelianHeaderEntitySaved = pembelianHeaderJpaRepository.save(pembelianHeaderEntity);
		return pembelianHeaderServiceMapper.mapPembelianHeaderEntityToPembelianHeader(pembelianHeaderEntitySaved);
	}

	@Override
	public void delete(Integer idPembelian) {
		pembelianHeaderJpaRepository.delete(idPembelian);
	}

	public PembelianHeaderJpaRepository getPembelianHeaderJpaRepository() {
		return pembelianHeaderJpaRepository;
	}

	public void setPembelianHeaderJpaRepository(PembelianHeaderJpaRepository pembelianHeaderJpaRepository) {
		this.pembelianHeaderJpaRepository = pembelianHeaderJpaRepository;
	}

	public PembelianHeaderServiceMapper getPembelianHeaderServiceMapper() {
		return pembelianHeaderServiceMapper;
	}

	public void setPembelianHeaderServiceMapper(PembelianHeaderServiceMapper pembelianHeaderServiceMapper) {
		this.pembelianHeaderServiceMapper = pembelianHeaderServiceMapper;
	}

}
