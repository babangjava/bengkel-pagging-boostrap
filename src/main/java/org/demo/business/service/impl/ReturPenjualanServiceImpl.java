/*
 * Created on 25 Jul 2021 ( Time 02:07:43 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.ReturPenjualan;
import org.demo.bean.jpa.ReturPenjualanEntity;
import java.util.Date;
import org.demo.business.service.ReturPenjualanService;
import org.demo.business.service.mapping.ReturPenjualanServiceMapper;
import org.demo.data.repository.jpa.ReturPenjualanJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ReturPenjualanService
 */
@Component
@Transactional
public class ReturPenjualanServiceImpl implements ReturPenjualanService {

	@Resource
	private ReturPenjualanJpaRepository returPenjualanJpaRepository;

	@Resource
	private ReturPenjualanServiceMapper returPenjualanServiceMapper;
	
	@Override
	public ReturPenjualan findById(Integer idreturPenjualan) {
		ReturPenjualanEntity returPenjualanEntity = returPenjualanJpaRepository.findOne(idreturPenjualan);
		return returPenjualanServiceMapper.mapReturPenjualanEntityToReturPenjualan(returPenjualanEntity);
	}

	@Override
	public List<ReturPenjualan> findAll() {
		Iterable<ReturPenjualanEntity> entities = returPenjualanJpaRepository.findAll();
		List<ReturPenjualan> beans = new ArrayList<ReturPenjualan>();
		for(ReturPenjualanEntity returPenjualanEntity : entities) {
			beans.add(returPenjualanServiceMapper.mapReturPenjualanEntityToReturPenjualan(returPenjualanEntity));
		}
		return beans;
	}

	@Override
	public ReturPenjualan save(ReturPenjualan returPenjualan) {
		return update(returPenjualan) ;
	}

	@Override
	public ReturPenjualan create(ReturPenjualan returPenjualan) {
		ReturPenjualanEntity returPenjualanEntity = returPenjualanJpaRepository.findOne(returPenjualan.getIdreturPenjualan());
		if( returPenjualanEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		returPenjualanEntity = new ReturPenjualanEntity();
		returPenjualanServiceMapper.mapReturPenjualanToReturPenjualanEntity(returPenjualan, returPenjualanEntity);
		ReturPenjualanEntity returPenjualanEntitySaved = returPenjualanJpaRepository.save(returPenjualanEntity);
		return returPenjualanServiceMapper.mapReturPenjualanEntityToReturPenjualan(returPenjualanEntitySaved);
	}

	@Override
	public ReturPenjualan update(ReturPenjualan returPenjualan) {
		ReturPenjualanEntity returPenjualanEntity = returPenjualanJpaRepository.findOne(returPenjualan.getIdreturPenjualan());
		returPenjualanServiceMapper.mapReturPenjualanToReturPenjualanEntity(returPenjualan, returPenjualanEntity);
		ReturPenjualanEntity returPenjualanEntitySaved = returPenjualanJpaRepository.save(returPenjualanEntity);
		return returPenjualanServiceMapper.mapReturPenjualanEntityToReturPenjualan(returPenjualanEntitySaved);
	}

	@Override
	public void delete(Integer idreturPenjualan) {
		returPenjualanJpaRepository.delete(idreturPenjualan);
	}

	public ReturPenjualanJpaRepository getReturPenjualanJpaRepository() {
		return returPenjualanJpaRepository;
	}

	public void setReturPenjualanJpaRepository(ReturPenjualanJpaRepository returPenjualanJpaRepository) {
		this.returPenjualanJpaRepository = returPenjualanJpaRepository;
	}

	public ReturPenjualanServiceMapper getReturPenjualanServiceMapper() {
		return returPenjualanServiceMapper;
	}

	public void setReturPenjualanServiceMapper(ReturPenjualanServiceMapper returPenjualanServiceMapper) {
		this.returPenjualanServiceMapper = returPenjualanServiceMapper;
	}

}
