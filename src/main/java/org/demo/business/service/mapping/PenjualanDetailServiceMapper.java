/*
 * Created on 25 Jul 2021 ( Time 02:07:43 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.demo.bean.PenjualanDetail;
import org.demo.bean.jpa.PenjualanDetailEntity;
import org.demo.bean.jpa.PenjualanHeaderEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class PenjualanDetailServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public PenjualanDetailServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'PenjualanDetailEntity' to 'PenjualanDetail'
	 * @param penjualanDetailEntity
	 */
	public PenjualanDetail mapPenjualanDetailEntityToPenjualanDetail(PenjualanDetailEntity penjualanDetailEntity) {
		if(penjualanDetailEntity == null) {
			return null;
		}

		//--- Generic mapping 
		PenjualanDetail penjualanDetail = map(penjualanDetailEntity, PenjualanDetail.class);

		//--- Link mapping ( link to PenjualanHeader )
		if(penjualanDetailEntity.getPenjualanHeader2() != null) {
			penjualanDetail.setPenjualanHeader(penjualanDetailEntity.getPenjualanHeader2().getIdPenjualanHeader());
		}
		return penjualanDetail;
	}
	
	/**
	 * Mapping from 'PenjualanDetail' to 'PenjualanDetailEntity'
	 * @param penjualanDetail
	 * @param penjualanDetailEntity
	 */
	public void mapPenjualanDetailToPenjualanDetailEntity(PenjualanDetail penjualanDetail, PenjualanDetailEntity penjualanDetailEntity) {
		if(penjualanDetail == null) {
			return;
		}

		//--- Generic mapping 
		map(penjualanDetail, penjualanDetailEntity);

		//--- Link mapping ( link : penjualanDetail )
		if( hasLinkToPenjualanHeader(penjualanDetail) ) {
			PenjualanHeaderEntity penjualanHeader1 = new PenjualanHeaderEntity();
			penjualanHeader1.setIdPenjualanHeader( penjualanDetail.getPenjualanHeader() );
			penjualanDetailEntity.setPenjualanHeader2( penjualanHeader1 );
		} else {
			penjualanDetailEntity.setPenjualanHeader2( null );
		}

	}
	
	/**
	 * Verify that PenjualanHeader id is valid.
	 * @param PenjualanHeader PenjualanHeader
	 * @return boolean
	 */
	private boolean hasLinkToPenjualanHeader(PenjualanDetail penjualanDetail) {
		if(penjualanDetail.getPenjualanHeader() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}