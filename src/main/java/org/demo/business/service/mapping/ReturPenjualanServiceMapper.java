/*
 * Created on 25 Jul 2021 ( Time 02:07:43 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.demo.bean.ReturPenjualan;
import org.demo.bean.jpa.ReturPenjualanEntity;
import org.demo.bean.jpa.PenjualanHeaderEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class ReturPenjualanServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public ReturPenjualanServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'ReturPenjualanEntity' to 'ReturPenjualan'
	 * @param returPenjualanEntity
	 */
	public ReturPenjualan mapReturPenjualanEntityToReturPenjualan(ReturPenjualanEntity returPenjualanEntity) {
		if(returPenjualanEntity == null) {
			return null;
		}

		//--- Generic mapping 
		ReturPenjualan returPenjualan = map(returPenjualanEntity, ReturPenjualan.class);

		//--- Link mapping ( link to PenjualanHeader )
		if(returPenjualanEntity.getPenjualanHeader2() != null) {
			returPenjualan.setPenjualanHeader(returPenjualanEntity.getPenjualanHeader2().getIdPenjualanHeader());
		}
		return returPenjualan;
	}
	
	/**
	 * Mapping from 'ReturPenjualan' to 'ReturPenjualanEntity'
	 * @param returPenjualan
	 * @param returPenjualanEntity
	 */
	public void mapReturPenjualanToReturPenjualanEntity(ReturPenjualan returPenjualan, ReturPenjualanEntity returPenjualanEntity) {
		if(returPenjualan == null) {
			return;
		}

		//--- Generic mapping 
		map(returPenjualan, returPenjualanEntity);

		//--- Link mapping ( link : returPenjualan )
		if( hasLinkToPenjualanHeader(returPenjualan) ) {
			PenjualanHeaderEntity penjualanHeader1 = new PenjualanHeaderEntity();
			penjualanHeader1.setIdPenjualanHeader( returPenjualan.getPenjualanHeader() );
			returPenjualanEntity.setPenjualanHeader2( penjualanHeader1 );
		} else {
			returPenjualanEntity.setPenjualanHeader2( null );
		}

	}
	
	/**
	 * Verify that PenjualanHeader id is valid.
	 * @param PenjualanHeader PenjualanHeader
	 * @return boolean
	 */
	private boolean hasLinkToPenjualanHeader(ReturPenjualan returPenjualan) {
		if(returPenjualan.getPenjualanHeader() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}