/*
 * Created on 25 Jul 2021 ( Time 02:07:51 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.Login;
import org.demo.business.service.LoginService;
import org.demo.web.listitem.LoginListItem;

/**
 * Spring MVC controller for 'Login' management.
 */
@Controller
public class LoginRestController {

	@Resource
	private LoginService loginService;
	
	@RequestMapping( value="/items/login",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<LoginListItem> findAllAsListItems() {
		List<Login> list = loginService.findAll();
		List<LoginListItem> items = new LinkedList<LoginListItem>();
		for ( Login login : list ) {
			items.add(new LoginListItem( login ) );
		}
		return items;
	}
	
	@RequestMapping( value="/login",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Login> findAll() {
		return loginService.findAll();
	}

	@RequestMapping( value="/login/{userName}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Login findOne(@PathVariable("userName") String userName) {
		return loginService.findById(userName);
	}
	
	@RequestMapping( value="/login",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Login create(@RequestBody Login login) {
		return loginService.create(login);
	}

	@RequestMapping( value="/login/{userName}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Login update(@PathVariable("userName") String userName, @RequestBody Login login) {
		return loginService.update(login);
	}

	@RequestMapping( value="/login/{userName}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("userName") String userName) {
		loginService.delete(userName);
	}
	
}
