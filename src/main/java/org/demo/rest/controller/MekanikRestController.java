/*
 * Created on 25 Jul 2021 ( Time 02:07:52 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.Mekanik;
import org.demo.business.service.MekanikService;
import org.demo.web.listitem.MekanikListItem;

/**
 * Spring MVC controller for 'Mekanik' management.
 */
@Controller
public class MekanikRestController {

	@Resource
	private MekanikService mekanikService;
	
	@RequestMapping( value="/items/mekanik",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<MekanikListItem> findAllAsListItems() {
		List<Mekanik> list = mekanikService.findAll();
		List<MekanikListItem> items = new LinkedList<MekanikListItem>();
		for ( Mekanik mekanik : list ) {
			items.add(new MekanikListItem( mekanik ) );
		}
		return items;
	}
	
	@RequestMapping( value="/mekanik",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Mekanik> findAll() {
		return mekanikService.findAll();
	}

	@RequestMapping( value="/mekanik/{idMekanik}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Mekanik findOne(@PathVariable("idMekanik") String idMekanik) {
		return mekanikService.findById(idMekanik);
	}
	
	@RequestMapping( value="/mekanik",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Mekanik create(@RequestBody Mekanik mekanik) {
		return mekanikService.create(mekanik);
	}

	@RequestMapping( value="/mekanik/{idMekanik}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Mekanik update(@PathVariable("idMekanik") String idMekanik, @RequestBody Mekanik mekanik) {
		return mekanikService.update(mekanik);
	}

	@RequestMapping( value="/mekanik/{idMekanik}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("idMekanik") String idMekanik) {
		mekanikService.delete(idMekanik);
	}
	
}
