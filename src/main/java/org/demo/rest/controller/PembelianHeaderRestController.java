/*
 * Created on 25 Jul 2021 ( Time 02:07:52 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.PembelianHeader;
import org.demo.business.service.PembelianHeaderService;
import org.demo.web.listitem.PembelianHeaderListItem;

/**
 * Spring MVC controller for 'PembelianHeader' management.
 */
@Controller
public class PembelianHeaderRestController {

	@Resource
	private PembelianHeaderService pembelianHeaderService;
	
	@RequestMapping( value="/items/pembelianHeader",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<PembelianHeaderListItem> findAllAsListItems() {
		List<PembelianHeader> list = pembelianHeaderService.findAll();
		List<PembelianHeaderListItem> items = new LinkedList<PembelianHeaderListItem>();
		for ( PembelianHeader pembelianHeader : list ) {
			items.add(new PembelianHeaderListItem( pembelianHeader ) );
		}
		return items;
	}
	
	@RequestMapping( value="/pembelianHeader",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<PembelianHeader> findAll() {
		return pembelianHeaderService.findAll();
	}

	@RequestMapping( value="/pembelianHeader/{idPembelian}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public PembelianHeader findOne(@PathVariable("idPembelian") Integer idPembelian) {
		return pembelianHeaderService.findById(idPembelian);
	}
	
	@RequestMapping( value="/pembelianHeader",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public PembelianHeader create(@RequestBody PembelianHeader pembelianHeader) {
		return pembelianHeaderService.create(pembelianHeader);
	}

	@RequestMapping( value="/pembelianHeader/{idPembelian}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public PembelianHeader update(@PathVariable("idPembelian") Integer idPembelian, @RequestBody PembelianHeader pembelianHeader) {
		return pembelianHeaderService.update(pembelianHeader);
	}

	@RequestMapping( value="/pembelianHeader/{idPembelian}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("idPembelian") Integer idPembelian) {
		pembelianHeaderService.delete(idPembelian);
	}
	
}
