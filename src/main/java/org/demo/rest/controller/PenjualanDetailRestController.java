/*
 * Created on 25 Jul 2021 ( Time 02:07:52 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.PenjualanDetail;
import org.demo.business.service.PenjualanDetailService;
import org.demo.web.listitem.PenjualanDetailListItem;

/**
 * Spring MVC controller for 'PenjualanDetail' management.
 */
@Controller
public class PenjualanDetailRestController {

	@Resource
	private PenjualanDetailService penjualanDetailService;
	
	@RequestMapping( value="/items/penjualanDetail",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<PenjualanDetailListItem> findAllAsListItems() {
		List<PenjualanDetail> list = penjualanDetailService.findAll();
		List<PenjualanDetailListItem> items = new LinkedList<PenjualanDetailListItem>();
		for ( PenjualanDetail penjualanDetail : list ) {
			items.add(new PenjualanDetailListItem( penjualanDetail ) );
		}
		return items;
	}
	
	@RequestMapping( value="/penjualanDetail",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<PenjualanDetail> findAll() {
		return penjualanDetailService.findAll();
	}

	@RequestMapping( value="/penjualanDetail/{idPenjualanDetail}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public PenjualanDetail findOne(@PathVariable("idPenjualanDetail") Integer idPenjualanDetail) {
		return penjualanDetailService.findById(idPenjualanDetail);
	}
	
	@RequestMapping( value="/penjualanDetail",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public PenjualanDetail create(@RequestBody PenjualanDetail penjualanDetail) {
		return penjualanDetailService.create(penjualanDetail);
	}

	@RequestMapping( value="/penjualanDetail/{idPenjualanDetail}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public PenjualanDetail update(@PathVariable("idPenjualanDetail") Integer idPenjualanDetail, @RequestBody PenjualanDetail penjualanDetail) {
		return penjualanDetailService.update(penjualanDetail);
	}

	@RequestMapping( value="/penjualanDetail/{idPenjualanDetail}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("idPenjualanDetail") Integer idPenjualanDetail) {
		penjualanDetailService.delete(idPenjualanDetail);
	}
	
}
