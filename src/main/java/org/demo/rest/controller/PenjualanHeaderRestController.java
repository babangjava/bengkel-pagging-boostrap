/*
 * Created on 25 Jul 2021 ( Time 02:07:52 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.PenjualanHeader;
import org.demo.business.service.PenjualanHeaderService;
import org.demo.web.listitem.PenjualanHeaderListItem;

/**
 * Spring MVC controller for 'PenjualanHeader' management.
 */
@Controller
public class PenjualanHeaderRestController {

	@Resource
	private PenjualanHeaderService penjualanHeaderService;
	
	@RequestMapping( value="/items/penjualanHeader",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<PenjualanHeaderListItem> findAllAsListItems() {
		List<PenjualanHeader> list = penjualanHeaderService.findAll();
		List<PenjualanHeaderListItem> items = new LinkedList<PenjualanHeaderListItem>();
		for ( PenjualanHeader penjualanHeader : list ) {
			items.add(new PenjualanHeaderListItem( penjualanHeader ) );
		}
		return items;
	}
	
	@RequestMapping( value="/penjualanHeader",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<PenjualanHeader> findAll() {
		return penjualanHeaderService.findAll();
	}

	@RequestMapping( value="/penjualanHeader/{idPenjualanHeader}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public PenjualanHeader findOne(@PathVariable("idPenjualanHeader") Integer idPenjualanHeader) {
		return penjualanHeaderService.findById(idPenjualanHeader);
	}
	
	@RequestMapping( value="/penjualanHeader",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public PenjualanHeader create(@RequestBody PenjualanHeader penjualanHeader) {
		return penjualanHeaderService.create(penjualanHeader);
	}

	@RequestMapping( value="/penjualanHeader/{idPenjualanHeader}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public PenjualanHeader update(@PathVariable("idPenjualanHeader") Integer idPenjualanHeader, @RequestBody PenjualanHeader penjualanHeader) {
		return penjualanHeaderService.update(penjualanHeader);
	}

	@RequestMapping( value="/penjualanHeader/{idPenjualanHeader}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("idPenjualanHeader") Integer idPenjualanHeader) {
		penjualanHeaderService.delete(idPenjualanHeader);
	}
	
}
