/*
 * Created on 25 Jul 2021 ( Time 02:07:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;

import org.demo.bean.PembelianHeader;
import org.demo.bean.jpa.PembelianHeaderEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.mapping.PembelianHeaderServiceMapper;
import org.demo.data.repository.jpa.PembelianHeaderJpaRepository;
import org.demo.test.PembelianHeaderFactoryForTest;
import org.demo.test.PembelianHeaderEntityFactoryForTest;
import org.demo.test.MockValues;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;

/**
 * Test : Implementation of PembelianHeaderService
 */
@RunWith(MockitoJUnitRunner.class)
public class PembelianHeaderServiceImplTest {

	@InjectMocks
	private PembelianHeaderServiceImpl pembelianHeaderService;
	@Mock
	private PembelianHeaderJpaRepository pembelianHeaderJpaRepository;
	@Mock
	private PembelianHeaderServiceMapper pembelianHeaderServiceMapper;
	
	private PembelianHeaderFactoryForTest pembelianHeaderFactoryForTest = new PembelianHeaderFactoryForTest();

	private PembelianHeaderEntityFactoryForTest pembelianHeaderEntityFactoryForTest = new PembelianHeaderEntityFactoryForTest();

	private MockValues mockValues = new MockValues();
	
	@Test
	public void findById() {
		// Given
		Integer idPembelian = mockValues.nextInteger();
		
		PembelianHeaderEntity pembelianHeaderEntity = pembelianHeaderJpaRepository.findOne(idPembelian);
		
		PembelianHeader pembelianHeader = pembelianHeaderFactoryForTest.newPembelianHeader();
		when(pembelianHeaderServiceMapper.mapPembelianHeaderEntityToPembelianHeader(pembelianHeaderEntity)).thenReturn(pembelianHeader);

		// When
		PembelianHeader pembelianHeaderFound = pembelianHeaderService.findById(idPembelian);

		// Then
		assertEquals(pembelianHeader.getIdPembelian(),pembelianHeaderFound.getIdPembelian());
	}

	@Test
	public void findAll() {
		// Given
		List<PembelianHeaderEntity> pembelianHeaderEntitys = new ArrayList<PembelianHeaderEntity>();
		PembelianHeaderEntity pembelianHeaderEntity1 = pembelianHeaderEntityFactoryForTest.newPembelianHeaderEntity();
		pembelianHeaderEntitys.add(pembelianHeaderEntity1);
		PembelianHeaderEntity pembelianHeaderEntity2 = pembelianHeaderEntityFactoryForTest.newPembelianHeaderEntity();
		pembelianHeaderEntitys.add(pembelianHeaderEntity2);
		when(pembelianHeaderJpaRepository.findAll()).thenReturn(pembelianHeaderEntitys);
		
		PembelianHeader pembelianHeader1 = pembelianHeaderFactoryForTest.newPembelianHeader();
		when(pembelianHeaderServiceMapper.mapPembelianHeaderEntityToPembelianHeader(pembelianHeaderEntity1)).thenReturn(pembelianHeader1);
		PembelianHeader pembelianHeader2 = pembelianHeaderFactoryForTest.newPembelianHeader();
		when(pembelianHeaderServiceMapper.mapPembelianHeaderEntityToPembelianHeader(pembelianHeaderEntity2)).thenReturn(pembelianHeader2);

		// When
		List<PembelianHeader> pembelianHeadersFounds = pembelianHeaderService.findAll();

		// Then
		assertTrue(pembelianHeader1 == pembelianHeadersFounds.get(0));
		assertTrue(pembelianHeader2 == pembelianHeadersFounds.get(1));
	}

	@Test
	public void create() {
		// Given
		PembelianHeader pembelianHeader = pembelianHeaderFactoryForTest.newPembelianHeader();

		PembelianHeaderEntity pembelianHeaderEntity = pembelianHeaderEntityFactoryForTest.newPembelianHeaderEntity();
		when(pembelianHeaderJpaRepository.findOne(pembelianHeader.getIdPembelian())).thenReturn(null);
		
		pembelianHeaderEntity = new PembelianHeaderEntity();
		pembelianHeaderServiceMapper.mapPembelianHeaderToPembelianHeaderEntity(pembelianHeader, pembelianHeaderEntity);
		PembelianHeaderEntity pembelianHeaderEntitySaved = pembelianHeaderJpaRepository.save(pembelianHeaderEntity);
		
		PembelianHeader pembelianHeaderSaved = pembelianHeaderFactoryForTest.newPembelianHeader();
		when(pembelianHeaderServiceMapper.mapPembelianHeaderEntityToPembelianHeader(pembelianHeaderEntitySaved)).thenReturn(pembelianHeaderSaved);

		// When
		PembelianHeader pembelianHeaderResult = pembelianHeaderService.create(pembelianHeader);

		// Then
		assertTrue(pembelianHeaderResult == pembelianHeaderSaved);
	}

	@Test
	public void createKOExists() {
		// Given
		PembelianHeader pembelianHeader = pembelianHeaderFactoryForTest.newPembelianHeader();

		PembelianHeaderEntity pembelianHeaderEntity = pembelianHeaderEntityFactoryForTest.newPembelianHeaderEntity();
		when(pembelianHeaderJpaRepository.findOne(pembelianHeader.getIdPembelian())).thenReturn(pembelianHeaderEntity);

		// When
		Exception exception = null;
		try {
			pembelianHeaderService.create(pembelianHeader);
		} catch(Exception e) {
			exception = e;
		}

		// Then
		assertTrue(exception instanceof IllegalStateException);
		assertEquals("already.exists", exception.getMessage());
	}

	@Test
	public void update() {
		// Given
		PembelianHeader pembelianHeader = pembelianHeaderFactoryForTest.newPembelianHeader();

		PembelianHeaderEntity pembelianHeaderEntity = pembelianHeaderEntityFactoryForTest.newPembelianHeaderEntity();
		when(pembelianHeaderJpaRepository.findOne(pembelianHeader.getIdPembelian())).thenReturn(pembelianHeaderEntity);
		
		PembelianHeaderEntity pembelianHeaderEntitySaved = pembelianHeaderEntityFactoryForTest.newPembelianHeaderEntity();
		when(pembelianHeaderJpaRepository.save(pembelianHeaderEntity)).thenReturn(pembelianHeaderEntitySaved);
		
		PembelianHeader pembelianHeaderSaved = pembelianHeaderFactoryForTest.newPembelianHeader();
		when(pembelianHeaderServiceMapper.mapPembelianHeaderEntityToPembelianHeader(pembelianHeaderEntitySaved)).thenReturn(pembelianHeaderSaved);

		// When
		PembelianHeader pembelianHeaderResult = pembelianHeaderService.update(pembelianHeader);

		// Then
		verify(pembelianHeaderServiceMapper).mapPembelianHeaderToPembelianHeaderEntity(pembelianHeader, pembelianHeaderEntity);
		assertTrue(pembelianHeaderResult == pembelianHeaderSaved);
	}

	@Test
	public void delete() {
		// Given
		Integer idPembelian = mockValues.nextInteger();

		// When
		pembelianHeaderService.delete(idPembelian);

		// Then
		verify(pembelianHeaderJpaRepository).delete(idPembelian);
		
	}

}
